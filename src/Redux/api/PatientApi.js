import { rootApi } from "./RootApi";

export const PatientApi = rootApi.injectEndpoints({
  endpoints: (builder) => ({
    getPatientById: builder.query({
      query: (patientId) => `patients/${patientId}`,
      providesTags: (result, error, _id) => [{ type: "Patient", id: _id }],
    }),
    createPatient: builder.mutation({
      query: (patientData) => ({
        url: "patients",
        method: "POST",
        body: patientData,
      }),
      invalidatesTags: [{ type: "Patient" }],
    }),
    createTestPatient: builder.mutation({
      query: (patientData) => ({
        url: "patients/test",
        method: "POST",
        body: patientData,
      }),
      invalidatesTags: [{ type: "Patient" }],
    }),
    getAllPatients: builder.query({
      query: () => ({
        url: "patients",
        method: "GET",
      }),
      providesTags: (result, error, _id) => [{ type: "Patient", id: _id }],
    }),
    updatePatient: builder.mutation({
      query: ({ patientId, patientData }) => ({
        url: `patients/${patientId}`,
        method: "PUT",
        body: patientData,
      }),
      invalidatesTags: (result, error, _id) => [{ type: "Patient", id: _id }],
    }),
    deletePatient: builder.mutation({
      query: (patientId) => ({
        url: `patients/${patientId}`,
        method: "DELETE",
      }),
      invalidatesTags: (result, error, _id) => [{ type: "Patient", id: _id }],
    }),
  }),
});

// Export hooks generated by the endpoints
export const {
  useGetPatientByIdQuery,
  useCreatePatientMutation,
  useCreateTestPatientMutation,
  useGetAllPatientsQuery,
  useUpdatePatientMutation,
  useDeletePatientMutation,
} = PatientApi;
