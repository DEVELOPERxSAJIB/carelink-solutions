import { rootApi } from "./RootApi";

export const FolderApi = rootApi.injectEndpoints({
  endpoints: (builder) => ({
    getFolderById: builder.query({
      query: (folderId) => `folders/${folderId}`,
      providesTags: (result, error, id) => [{ type: "Folder", id }],
    }),
    createFolder: builder.mutation({
      query: (folderData) => ({
        url: "folders",
        method: "POST",
        body: folderData,
      }),
      invalidatesTags: [{ type: "Folder", id: "LIST" }],
    }),
    getAllFolders: builder.query({
      query: () => ({
        url: "folders",
        method: "GET",
      }),
      providesTags: (result, error, _) => [{ type: "Folder", id: "LIST" }],
    }),
    updateFolder: builder.mutation({
      query: ({ folderId, folderData }) => ({
        url: `folders/${folderId}`,
        method: "PUT",
        body: folderData,
      }),
      invalidatesTags: (result, error, id) => [{ type: "Folder", id }],
    }),
    deleteFolder: builder.mutation({
      query: (folderId) => ({
        url: `folders/${folderId}`,
        method: "DELETE",
      }),
      invalidatesTags: (result, error, id) => [{ type: "Folder", id }],
    }),
  }),
});

// Export hooks generated by the endpoints
export const {
  useGetFolderByIdQuery,
  useCreateFolderMutation,
  useGetAllFoldersQuery,
  useUpdateFolderMutation,
  useDeleteFolderMutation
} = FolderApi;
