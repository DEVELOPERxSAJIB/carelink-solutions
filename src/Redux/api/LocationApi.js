import { rootApi } from "./RootApi";

export const LocationApi = rootApi.injectEndpoints({
  endpoints: (builder) => ({
    getLocationById: builder.query({
      query: (locationId) => `location/${locationId}`,
      providesTags: (result, error, _id) => [{ type: "Location", id: _id }],
    }),
    createLocation: builder.mutation({
      query: (locationData) => ({
        url: "location",
        method: "POST",
        body: locationData,
      }),
      invalidatesTags: [{ type: "Location" }],
    }),
    getAllLocations: builder.query({
      query: () => ({
        url: "location",
        method: "GET",
      }),
      providesTags: (result, error, _) => [{ type: "Location" }],
    }),
    updateLocation: builder.mutation({
      query: ({ locationId, locationData }) => ({
        url: `location/${locationId}`,
        method: "PUT",
        body: locationData,
      }),
      
      invalidatesTags: (result, error, _id) => [{ type: "Location", id: _id }],
    }),
    deleteLocation: builder.mutation({
      query: (locationId) => ({
        url: `location/${locationId}`,
        method: "DELETE",
      }),
      invalidatesTags: (result, error, _id) => [{ type: "Location", id: _id }],
    }),
  }),
});

// Export hooks generated by the endpoints
export const {
  useGetLocationByIdQuery,
  useCreateLocationMutation,
  useGetAllLocationsQuery,
  useUpdateLocationMutation,
  useDeleteLocationMutation,
} = LocationApi;
