import { rootApi } from "./RootApi";

export const PhysicianApi = rootApi.injectEndpoints({
  endpoints: (builder) => ({
    getPhysicianById: builder.query({
      query: (physicianId) => `physicians/${physicianId}`,
      providesTags: (result, error, _id) => [{ type: "Physician", id: _id }],
    }),
    getPhysicianByPatientId: builder.query({
      query: (physicianId) => `physician/single/${physicianId}`,
      providesTags: (result, error, _id) => [{ type: "Physician", id: _id }],
    }),
    createPhysician: builder.mutation({
      query: (physicianData) => ({
        url: "physician",
        method: "POST",
        body: physicianData,
      }),
      invalidatesTags: [{ type: "Physician" }],
    }),
    getAllPhysicians: builder.query({
      query: () => ({
        url: "physician",
        method: "GET",
      }),
      providesTags: (result, error, _) => [{ type: "Physician" }],
    }),
    updatePhysician: builder.mutation({
      query: ({ physicianId, physicianData }) => ({
        url: `physician/${physicianId}`,
        method: "PUT",
        body: physicianData,
      }),
      invalidatesTags: (result, error, _id) => [{ type: "Physician", id: _id }],
    }),
    deletePhysician: builder.mutation({
      query: (physicianId) => ({
        url: `physician/${physicianId}`,
        method: "DELETE",
      }),
      invalidatesTags: (result, error, _id) => [{ type: "Physician", id: _id }],
    }),
  }),
});

// Export hooks generated by the endpoints
export const {
  useGetPhysicianByIdQuery,
  useGetPhysicianByPatientIdQuery,
  useCreatePhysicianMutation,
  useGetAllPhysiciansQuery,
  useUpdatePhysicianMutation,
  useDeletePhysicianMutation,
} = PhysicianApi;
